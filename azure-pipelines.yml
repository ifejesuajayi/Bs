trigger:
 tags:
   include:
     - v*

stages:
- stage: Build
  displayName: Build Test and push stage
  jobs:
  - job: Build
    displayName: Build Test and push stage
    pool:
      vmImage: $(VMIMAGENAME)

    steps:

    - task: SonarQubePrepare@7
      inputs:
        SonarQube: 'xownsol-sonar'
        scannerMode: 'dotnet'
        dotnetScannerVersion: '9.2.1.110358'
        projectKey: 'Xownsolutions_Xownsolutions_a9eefa67-1c98-4e3a-8b94-c59688aef6f0'
        projectName: 'Xownsolutions-Test'
        extraProperties: |
          'sonar.branch.name='
           sonar.qualitygate.wait=true

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
      displayName: 'Restore the Project'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        arguments: '--configuration $(BUILDCONFIGURATION)'
        projects: '**/*.csproj'
      displayName: 'Build the Project'
    
  
    - task: SonarQubeAnalyze@7
      inputs:
        jdkversion: 'JAVA_HOME_17_X64'
      env:
        SONAR_SCANNER_OPTS: "-Dsonar.branch.name="
      
    - task: SonarQubePublish@7
      inputs:
        pollingTimeoutSec: '300'
  
    - script: |
        echo "Quality Gate Status: $(SONARQUBEQUALITYGATESTATUS)"
      displayName: "Check Quality Gate Status"

    - task: Docker@2
      displayName: Build and push an image to container registry
      condition: and(succeeded(), eq(variables['SONARQUBEQUALITYGATESTATUS'], 'Passed')) #only run if quality gate passes
      inputs:
        containerRegistry: '247-ACR'
        repository: '247travels-BS-API'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(TAG)'
      
    